syntax = "proto3";

import "google/protobuf/any.proto";

package JAAS;

message UInt64
   {
   uint64 val = 1;
   uint64 type = 2;
   }
message UInt32
   {
   uint32 val = 1;
   uint64 type = 2;
   }
message Bytes
   {
   bytes val = 1;
   uint64 type = 2;
   }
message Bool
   {
   bool val = 1;
   uint64 type = 2;
   }
message Int64
   {
   int64 val = 1;
   uint64 type = 2;
   }
message Int32
   {
   int32 val = 1;
   uint64 type = 2;
   }
message Void
   {
   }

message AnyData
   {
   repeated google.protobuf.Any data = 1;
   }

enum J9ServerMessageType
   {
   compilationCode = 0;
   mirrorResolvedJ9Method = 1;
   get_params_to_construct_TR_j9method = 2;

   // For TR_ResolvedJ9JAASServerMethod methods
   ResolvedMethod_isJNINative = 100;
   ResolvedMethod_isInterpreted = 101;
   ResolvedMethod_setRecognizedMethodInfo = 102;
//   ResolvedMethod_getClassLoader = 103; available
   ResolvedMethod_jniNativeMethodProperties = 104;
   ResolvedMethod_staticAttributes = 105;
   ResolvedMethod_getClassFromConstantPool = 106;
   ResolvedMethod_getDeclaringClassFromFieldOrStatic = 107;
   ResolvedMethod_classOfStatic = 108;
   ResolvedMethod_startAddressForJNIMethod = 109;
   ResolvedMethod_fieldAttributes = 110;
   ResolvedMethod_getResolvedStaticMethod = 111;
   ResolvedMethod_getResolvedSpecialMethod = 112;
   ResolvedMethod_classCPIndexOfMethod = 113;
   ResolvedMethod_startAddressForJittedMethod = 114;
   ResolvedMethod_localName = 115;
   ResolvedMethod_getResolvedVirtualMethod = 116;
   ResolvedMethod_virtualMethodIsOverridden = 117;
   ResolvedMethod_getResolvedInterfaceMethod_2 = 118; // arity 2
   ResolvedMethod_getResolvedInterfaceMethod_3 = 119; // arity 3
   ResolvedMethod_getResolvedInterfaceMethodOffset = 120;
   ResolvedMethod_getUnresolvedStaticMethodInCP = 121;

   // For TR_J9ServerVM methods
   VM_isClassLibraryClass = 200;
   VM_isClassLibraryMethod = 201;
   VM_getSuperClass = 202;
   VM_isInstanceOf = 203;
   VM_isInterfaceClass = 204;
   VM_isClassArray = 205;
   VM_isClassFinal = 206;
   VM_isAbstractClass = 207;
   VM_getSystemClassFromClassName = 208;
   VM_isMethodEnterTracingEnabled = 209;
   VM_isMethodExitTracingEnabled = 210;
   VM_getClassClassPointer = 211;
//   VM_getClassLoader = 212; available
   VM_getClassOfMethod = 213;
   VM_getBaseComponentClass = 214;
   VM_getLeafComponentClassFromArrayClass = 215;
   VM_getPersistentClassPointerFromClassPointer = 216;
   VM_getClassFromSignature = 217;
   VM_jitFieldsAreSame = 218;
   VM_jitStaticsAreSame = 219;
   VM_getComponentClassFromArrayClass = 220;
   VM_classHasBeenReplaced = 221;
   VM_classHasBeenExtended = 222;
   VM_compiledAsDLTBefore = 223;
   VM_getClassNameChars = 224;
   VM_getOverflowSafeAllocSize = 225;
   VM_isThunkArchetype = 226;
   VM_printTruncatedSignature = 227;
   VM_isPrimitiveClass = 228;
   VM_isClassInitialized = 229;
   VM_getOSRFrameSizeInBytes = 230;
   VM_getByteOffsetToLockword = 231;
   VM_isString1 = 232;
   VM_getMethods = 233;
   VM_getNumMethods = 234;
   VM_getNumInnerClasses = 235;
   VM_isPrimitiveArray = 236;
   VM_getAllocationSize = 237;
   VM_getObjectClass = 238;
   VM_stackWalkerMaySkipFrames = 239;
   VM_hasFinalFieldsInClass = 240;
   VM_getClassNameSignatureFromMethod = 241;
   VM_getHostClass = 242;
   VM_getStringUTF8Length = 243;
   VM_classInitIsFinished = 244;
   VM_getClassFromNewArrayType = 245;
   VM_isCloneable = 246;
   VM_canAllocateInlineClass = 247;
   VM_getArrayClassFromComponentClass = 248;
   VM_matchRAMclassFromROMclass = 249;
   VM_getReferenceFieldAtAddress = 250;
   VM_getVolatileReferenceFieldAt = 251;
   VM_getInt32FieldAt = 252;
   VM_getInt64FieldAt = 253;
   VM_setInt64FieldAt = 254;
   VM_compareAndSwapInt64FieldAt = 255;
   VM_getArrayLengthInElements = 256;
   VM_getClassFromJavaLangClass = 257;

   // For static TR::CompilationInfo methods
   CompInfo_isCompiled = 300;
   CompInfo_getInvocationCount = 301;
   CompInfo_setInvocationCount = 302;
   CompInfo_getJ9MethodExtra = 303;
   CompInfo_isJNINative = 304;
   CompInfo_isJSR292 = 305;
   CompInfo_getMethodBytecodeSize = 306;
   CompInfo_setJ9MethodExtra = 307;

   // For J9::ClassEnv Methods
   ClassEnv_classFlagsValue = 400;
   ClassEnv_classDepthOf = 401;
   ClassEnv_classInstanceSize = 402;
   ClassEnv_romClassOf = 403;
   ClassEnv_superClassesOf = 404;
   ClassEnv_romClassOfSuperClass = 405;
   ClassEnv_iTableOf = 406;
   ClassEnv_iTableNext = 407;
   ClassEnv_iTableRomClass = 408;

   // For TR_J9SharedCache
   SharedCache_getClassChainOffsetInSharedCache = 500;
   }

message J9ServerMessage
   {
   J9ServerMessageType type = 1;
   AnyData data = 2;
   }

message J9ClientMessage
   {
   AnyData data = 2;
   }

service J9CompileService
   {
   rpc Compile (stream J9ClientMessage) returns (stream J9ServerMessage);
   }
