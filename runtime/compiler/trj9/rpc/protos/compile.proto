syntax = "proto3";

package JAAS;

message J9CompileRequest
   {
   uint32 methodOffset = 1;
   uint32 classOffset = 2;
   uint32 classChainCOffset = 3;
   uint32 classChainCLOffset = 4;
   }

// anything that has an associated J9Class (ram class)
// this allows us to pass a method instead of a class and get the conversion for free
message IntoJ9Class
   {
   oneof MessageKind
      {
      uint64 j9_class = 1;
      uint64 j9_method = 2;
      }
   }

message ROMClassAndMethod
   {
   bytes rom_class = 3;
   uint64 method_index = 4;
   }

message J9ClientMessage
   {
   oneof MessageKind
      {
      J9CompileRequest compile_request = 1;
      bool single_bool = 2;
      ROMClassAndMethod rom_class_and_method = 3;
      fixed64 single_pointer = 4;
      }
   }

enum J9InformationType
   {
   canMethodEnterEventBeHooked = 0;
   canMethodExitEventBeHooked = 1;
   }

message J9ServerMessage
   {
   oneof MessageKind
      {
      uint32 compilation_code = 1;
      J9InformationType info_0 = 2;
      fixed64 get_rom_class_and_method_from_ram_method = 3;
      IntoJ9Class is_class_library_class = 4;
      fixed64 get_constant_pool_from_method = 5;
      fixed64 get_class_from_constant_pool = 6;
      }
   }

service J9CompileService
   {
   rpc Compile (stream J9ClientMessage) returns (stream J9ServerMessage);
   }
