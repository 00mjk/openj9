syntax = "proto3";

package JAAS;

message Any
   {
   uint64 extendedTypeTag = 1;
   oneof type
      {
      uint64 uint64_v = 2;
      uint32 uint32_v = 3;
      int64 int64_v = 4;
      int32 int32_v = 5;
      bytes bytes_v = 6;
      bool bool_v = 7;
      }
   }

message AnyData
   {
   repeated Any data = 1;
   }

enum J9ServerMessageType
   {
   compilationCode = 0;
   mirrorResolvedJ9Method = 1;
   get_params_to_construct_TR_j9method = 2;

   // For TR_ResolvedJ9JAASServerMethod methods
   ResolvedMethod_isJNINative = 100;
   ResolvedMethod_isInterpreted = 101;
   ResolvedMethod_setRecognizedMethodInfo = 102;
   ResolvedMethod_startAddressForInterpreterOfJittedMethod = 103;
   ResolvedMethod_jniNativeMethodProperties = 104;
   ResolvedMethod_staticAttributes = 105;
   ResolvedMethod_getClassFromConstantPool = 106;
   ResolvedMethod_getDeclaringClassFromFieldOrStatic = 107;
   ResolvedMethod_classOfStatic = 108;
   ResolvedMethod_startAddressForJNIMethod = 109;
   ResolvedMethod_fieldAttributes = 110;
   ResolvedMethod_getResolvedStaticMethod = 111;
   ResolvedMethod_getResolvedSpecialMethod = 112;
   ResolvedMethod_classCPIndexOfMethod = 113;
   ResolvedMethod_startAddressForJittedMethod = 114;
   ResolvedMethod_localName = 115;
   ResolvedMethod_getResolvedVirtualMethod = 116;
   ResolvedMethod_virtualMethodIsOverridden = 117;
   ResolvedMethod_getResolvedInterfaceMethod_2 = 118; // arity 2
   ResolvedMethod_getResolvedInterfaceMethod_3 = 119; // arity 3
   ResolvedMethod_getResolvedInterfaceMethodOffset = 120;
   ResolvedMethod_getUnresolvedStaticMethodInCP = 121;
   ResolvedMethod_isSubjectToPhaseChange = 122;
   ResolvedMethod_getUnresolvedSpecialMethodInCP = 123;
   ResolvedMethod_getUnresolvedFieldInCP = 124;
   ResolvedMethod_getRemoteROMString = 125;
   ResolvedMethod_fieldOrStaticName = 126;
   ResolvedMethod_getRemoteROMClass = 127;
   ResolvedMethod_getResolvedHandleMethod = 128;
   ResolvedMethod_isUnresolvedMethodTypeTableEntry = 129;
   ResolvedMethod_methodTypeTableEntryAddress = 130;
   ResolvedMethod_isUnresolvedCallSiteTableEntry = 131;
   ResolvedMethod_callSiteTableEntryAddress = 132;
   ResolvedMethod_getResolvedDynamicMethod = 133;
   ResolvedMethod_shouldFailSetRecognizedMethodInfoBecauseOfHCR = 134;
   ResolvedMethod_isSameMethod = 135;
   ResolvedMethod_isBigDecimalMethod = 136;
   ResolvedMethod_isBigDecimalConvertersMethod = 137;
   ResolvedMethod_osrFrameSize = 138;
   ResolvedMethod_isInlineable = 139;
   ResolvedMethod_isWarmCallGraphTooBig = 140;
   ResolvedMethod_setWarmCallGraphTooBig = 141;
   ResolvedMethod_setVirtualMethodIsOverridden = 142;
   ResolvedMethod_addressContainingIsOverriddenBit = 143;
   ResolvedMethod_methodIsNotzAAPEligible = 144;

   // For TR_J9ServerVM methods
   VM_isClassLibraryClass = 200;
   VM_isClassLibraryMethod = 201;
   VM_getSuperClass = 202;
   VM_isInstanceOf = 203;
   VM_getArrayLengthOfStaticAddress = 204;
//   VM_isClassArray = 205;
//   VM_isClassFinal = 206;
//   VM_isAbstractClass = 207;
   VM_getSystemClassFromClassName = 208;
   VM_isMethodEnterTracingEnabled = 209;
   VM_isMethodExitTracingEnabled = 210;
   VM_getClassClassPointer = 211;
   VM_setJ2IThunk = 212;
   VM_getClassOfMethod = 213;
   VM_getBaseComponentClass = 214;
   VM_getLeafComponentClassFromArrayClass = 215;
   VM_isClassLoadedBySystemClassLoader = 216;
   VM_getClassFromSignature = 217;
   VM_jitFieldsAreSame = 218;
   VM_jitStaticsAreSame = 219;
   VM_getComponentClassFromArrayClass = 220;
   VM_classHasBeenReplaced = 221;
   VM_classHasBeenExtended = 222;
   VM_compiledAsDLTBefore = 223;
//   VM_getClassNameChars = 224;
   VM_getOverflowSafeAllocSize = 225;
   VM_isThunkArchetype = 226;
   VM_printTruncatedSignature = 227;
//   VM_isPrimitiveClass = 228;
   VM_isClassInitialized = 229;
   VM_getOSRFrameSizeInBytes = 230;
   VM_getByteOffsetToLockword = 231;
   VM_isString1 = 232;
   VM_getMethods = 233;
   //VM_getNumMethods = 234;
   //VM_getNumInnerClasses = 235;
   VM_isPrimitiveArray = 236;
   VM_getAllocationSize = 237;
   VM_getObjectClass = 238;
   VM_stackWalkerMaySkipFrames = 239;
   VM_hasFinalFieldsInClass = 240;
   VM_getClassNameSignatureFromMethod = 241;
   VM_getHostClass = 242;
   VM_getStringUTF8Length = 243;
   VM_classInitIsFinished = 244;
   VM_getClassFromNewArrayType = 245;
   VM_isCloneable = 246;
   VM_canAllocateInlineClass = 247;
   VM_getArrayClassFromComponentClass = 248;
   VM_matchRAMclassFromROMclass = 249;
   VM_getReferenceFieldAtAddress = 250;
   VM_getVolatileReferenceFieldAt = 251;
   VM_getInt32FieldAt = 252;
   VM_getInt64FieldAt = 253;
   VM_setInt64FieldAt = 254;
   VM_compareAndSwapInt64FieldAt = 255;
   VM_getArrayLengthInElements = 256;
   VM_getClassFromJavaLangClass = 257;
   VM_getOffsetOfClassFromJavaLangClassField = 258;
   VM_getConstantPoolFromMethod = 259;
   VM_getProcessID = 260;
   VM_getIdentityHashSaltPolicy = 261;
   VM_getOffsetOfJLThreadJ9Thread = 262;
   VM_getVFTEntry = 263;
   VM_scanReferenceSlotsInClassForOffset = 264;
   VM_findFirstHotFieldTenuredClassOffset = 265;
   VM_getResolvedVirtualMethod = 266;
   VM_sameClassLoaders = 267;
   VM_isUnloadAssumptionRequired = 268;
   VM_scanClassForReservation = 269;
   VM_getInstanceFieldOffset = 270;
   VM_getJavaLangClassHashCode = 271;
   VM_hasFinalizer = 272;
   VM_getClassDepthAndFlagsValue = 273;
   VM_getMethodFromName = 274;
   VM_getMethodFromClass = 275;
   VM_isClassVisible = 276;
   VM_markClassForTenuredAlignment = 277;
   VM_getReferenceSlotsInClass = 278;
   VM_getMethodSize = 279;
   VM_addressOfFirstClassStatic = 280;
   VM_getStaticFieldAddress = 281;
   VM_getInterpreterVTableSlot = 282;
   VM_revertToInterpreted = 283;
   VM_getLocationOfClassLoaderObjectPointer = 284;
   VM_isOwnableSyncClass = 285;
   VM_getClassFromMethodBlock = 286;
   VM_fetchMethodExtendedFlagsPointer = 287;
   VM_stringEquals = 288;
   VM_getStringHashCode = 289;
   VM_getLineNumberForMethodAndByteCodeIndex = 290;
   VM_getObjectNewInstanceImplMethod = 291;
   VM_getBytecodePC = 292;
   VM_getClassFromStatic = 293;
   VM_setInvokeExactJ2IThunk = 294;
   VM_createMethodHandleArchetypeSpecimen = 295;

   // For static TR::CompilationInfo methods
   CompInfo_isCompiled = 300;
   CompInfo_getInvocationCount = 301;
   CompInfo_setInvocationCount = 302;
   CompInfo_getJ9MethodExtra = 303;
   CompInfo_isJNINative = 304;
   CompInfo_isJSR292 = 305;
   CompInfo_getMethodBytecodeSize = 306;
   CompInfo_setJ9MethodExtra = 307;
   CompInfo_setInvocationCountAtomic = 308;

   // For J9::ClassEnv Methods
   ClassEnv_classFlagsValue = 400;
   ClassEnv_classDepthOf = 401;
   ClassEnv_classInstanceSize = 402;
//   ClassEnv_romClassOf = 403;
   ClassEnv_superClassesOf = 404;
   ClassEnv_indexedSuperClassOf = 405;
   ClassEnv_iTableOf = 406;
   ClassEnv_iTableNext = 407;
   ClassEnv_iTableRomClass = 408;

   // For TR_J9SharedCache
   SharedCache_getClassChainOffsetInSharedCache = 500;

   // For runFEMacro
   runFEMacro_invokeCollectHandleNumArgsToCollect = 600;
   runFEMacro_invokeExplicitCastHandleConvertArgs = 601;
   runFEMacro_targetTypeL = 602;
   runFEMacro_invokeILGenMacrosInvokeExactAndFixup = 603;
   runFEMacro_invokeArgumentMoverHandlePermuteArgs = 604;
   runFEMacro_invokePermuteHandlePermuteArgs = 605;
   runFEMacro_invokeGuardWithTestHandleNumGuardArgs = 606;
   runFEMacro_invokeInsertHandle = 607;
   runFEMacro_invokeDirectHandleDirectCall = 608;
   runFEMacro_invokeSpreadHandleArrayArg = 609;
   runFEMacro_invokeSpreadHandle = 610;
   runFEMacro_invokeFoldHandle = 611;
   runFEMacro_invokeFoldHandle2 = 612;
   runFEMacro_invokeFinallyHandle = 613;
   runFEMacro_invokeFilterArgumentsHandle = 614;
   runFEMacro_invokeFilterArgumentsHandle2 = 615;
   runFEMacro_invokeCatchHandle = 616;
   runFEMacro_invokeILGenMacros = 617;
   runFEMacro_derefUintptrjPtr = 618;

   // for JaasPersistentCHTable
   CHTable_getAllClassInfo = 700;
   CHTable_getClassInfoUpdates = 701;
   }

message J9ServerMessage
   {
   J9ServerMessageType type = 1;
   AnyData data = 2;
   }

message J9ClientMessage
   {
   bool status = 1;
   AnyData data = 2;
   }

service J9CompileService
   {
   rpc Compile (stream J9ClientMessage) returns (stream J9ServerMessage);
   }
